import {useState} from 'react';
import { Redirect } from 'react-router-dom';
import Axios from 'axios';

const Login = ({setToken}) => { //a token refers to a unique piece of data that is generated by the server when a user successfully logs in. , tokens are a critical component of any modern login system and play an important role in securing user data and preventing unauthorized access to protected resources.
    const [email, setEmail] = useState ("");
    const [password, setPassword] = useState ("");
    const [redirectToProfile, setRedirectToProfile] = useState(false);

    const handleSubmit = async e=> { //The e parameter is typically an event object that is passed to the function when an event occurs, such as a click or a submit event. 
        e.preventDefault(); //Calling e.preventDefault() in an event handler function prevents the default behavior associated with the event from occurring. 
        const response = await axios.post('http://localhost:3001/create', { email, password }); //Axios allows us to make a HTTP request.  Create is the endpoint we have in 5c (server side). 
        setToken(responsive.data.token);//this is a statement in JavaScript that assigns the value of response.data.token to a variable or state property named 'token'
        setRedirectToProfile(true);
    };


    if (redirectToProfile) {
        return <Redirect to="/profile" />;
    }

return (
    <form onSubmit={handleSubmit}>
        <label>
            Email:
            <input type="email" value={email} onChange={e => setEmail(e.target.value)} />            
        </label>
        <br/>
        <label>
            Password:
            <input type="password" value={password} onChange={e => setPassword(e.target.value)} />   
        </label>
        <br/>
        <button type="submit"> Log In </button>
    </form>
 );

//Store the JWT in local storage or cookies in the frontend for future authentication
 const setToken = token => {
    localStorage.setItem('token', token);
};

const getToken = () => {
    return localStorage.getItem('token');
};


};

export default Login;